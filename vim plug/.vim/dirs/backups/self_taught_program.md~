# SELF TAUGHT PROGRAMMER 

## Section 1: Introduction to Programming 

- The goal here is the core concepts 
- Learn to Python 
- Learn OOP 
- Learn a variety of a programming tools 
- Possibly help with job hunt 

### INSTALLING PYTHON 

### PROGRAMMING CONCEPTS 
- **SYNTAX** A set of rules, principles, and processes that govern the structure of sentences in a given language
- **Line numbers**
- **Keywords** these are words that are unique to a programming language syntax. For example the word **FOR** in Python is a keyword 
- **Comments** a comment in Python is preceded by a *#*. 
    - Python syntax is very strict about indentation 
    - Indentation affects your code 
    - Indentation in Python is **four spaces**
   
### MATH WITH PYTHON
- Python is useful for math evaluation 
- In math a constant value is one that doesn't change. For example: 2 is always 2 in conventional math 
- In computational math, we use variables to give it a variable value 
- Variables can be used for numbers and other data types including strings 
- You can assign a variable to a string like "hello world", or a boolean like true or false 
- You can use two variables to do arithmetic 
- You can increase the value of a variable, this is called **Incrementing**
- You can also decrease the value of a variable, this is called **decrementing**
- Naming variables have the following rules that code has to conform to 
    - Variable names cannot have spaces, but if you want to use two words in a variable, put an underscore in between like so *my_variable = "self taught"
    - Variable names can only contain letters, numbers and the underscore symbol 
    - You cannot start a variable with a number 
    - You can start a variable with an underscore although this is used for special purposes that we will cover later in the lesson 

### DATA TYPES IN PYTHON 
- Python has the following data types
    - integer: 1, 2, 3, ...
    - string: "Hello World"
    - float: 15.4
    - boolean: True or False 
    - nonetype: None 
- Everything in Python is an **object** (which we will learn more about in detail in the remaining lessons)
- Every object has a data type 
- For simplicity, let us think of an object as anything you type into Python that represents some form of data
- Consider the example of whole numbers like 100, 50, 20 is the data type integer
- Decimals like 18.9 is a float 
- Words are strings 
- nonetype represents the **absence** of values 

**SUMMARY**

- Everything in Python is an object
- Python puts every object into a category that represents what kind of data it is - this is called a **data type** 
- The following are the different kinds of data types: integer, float, string, boolean, nonetype. 



### ARITHMETIC OPERATORS 

- Python has three types of operators 
    - Arithmetic operators 
    - Comparison operators 
    - Logical operators

- You use operators in an **expression* 
- Expression is a line of code that Python reduces to a single value 
- An example of expression is 4 / 2 . In this case, Python evaluates the expression to 2 
- An expression is made of operands and operators 
- In the case of 4/2, the division sign (/) is the operator while 4 & 2 are the operands 
- Python includes the following operators: **Exponent(**)**, *Modulo(%)**, **Integer Division(//)**, **Division(/)**, **Multiplication(*)**, **Addition(+)**, and **Subtraction(-)**
